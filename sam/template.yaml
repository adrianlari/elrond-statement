AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Elrond Register

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: register.elrond.com
      AccessControl: Private
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginIdentity}"
            Action: "s3:GetObject"
            Resource: "arn:aws:s3:::register.elrond.com/*"

  CloudFrontOriginIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "register.elrond.com"

  CloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        PriceClass: PriceClass_100
        Aliases:
          - register.elrond.com
        Origins:
          - Id: s3-static-site
            DomainName: register.elrond.com.s3.us-east-1.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginIdentity}"
        ViewerCertificate:
          AcmCertificateArn: "arn:aws:acm:us-east-1:777241893292:certificate/4fc48d4f-75c1-4bb9-983f-0c49b1fc44e1"
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          MaxTTL: 0
          DefaultTTL: 0
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: s3-static-site
          LambdaFunctionAssociations:
            - EventType: viewer-request
              LambdaFunctionARN: !Ref StagingEdgeRequestVersion1

  EdgeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - edgelambda.amazonaws.com
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  StagingEdgeRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: register-staging-edge-request
      CodeUri: ./staging-edge-request
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 1
      Role: !GetAtt EdgeRole.Arn

  StagingEdgeRequestVersion1:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName: !GetAtt StagingEdgeRequestFunction.Arn
